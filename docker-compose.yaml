---
version: '3'
services:

  # Jupyter Lab
  jupyter:
    image: cmihai/jupyter:v1
    container_name: 'datascience_jupyter'
    hostname: jupyter
    restart: 'always'
    build: services/jupyter
    env_file:
      - ./config/jupyter.env
    labels:
      - traefik.backend=jupyter
      - traefik.frontend.rule=Host:jupyter.docker.localhost
      - traefik.port=8888
    depends_on:
      - traefik
      - postgres
    links:
      - postgres


  ########################################################################
  ## Data
  ########################################################################
  # Postgres - SQL Database
  postgres:
    image: postgres:12-alpine
    container_name: 'datascience_postgres'
    restart: 'always'
    env_file:
      - ./config/postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql


  ########################################################################
  ## Visualization
  ########################################################################
  # Superset
  superset:
    image: tylerfowler/superset:0.28
    container_name: 'datascience_superset'
    restart: 'always'
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:superset.docker.localhost
      - traefik.port=9000
    depends_on:
      - postgres
    env_file:
      - ./config/superset.env

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: 'datascience_grafana'
    restart: 'always'
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:grafana.docker.localhost
      - traefik.port=3000
    depends_on:
      - postgres
    env_file:
      - ./config/grafana.env


  ########################################################################
  ## Management tooling
  ########################################################################
  # PGAdmin4 - Manage PostreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: 'datascience_pgadmin'
    restart: 'always'
    depends_on:
      - postgres
    env_file:
      - ./config/pgadmin.env
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:pgadmin.docker.localhost
      - traefik.port=80
    ports:
      - 8080:80
    links:
      - postgres

  # Portainer - Manage Containers
  portainer:
    image: portainer/portainer
    container_name: 'datascience_portainer'
    restart: 'always'
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:portainer.docker.localhost
      - traefik.port=9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data
    command: -H unix:///var/run/docker.sock

  # Traefik - Authentication, SSL, Proxy and Load Balancer
  traefik:
    image: traefik:v2.0-alpine
    hostname: traefik
    container_name: 'datascience_traefik'
    command: --api --docker
    restart: 'always'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - ./config/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock


############################
## Volumes
############################

volumes:
  postgres_data:
  portainer_volume:
  minio_volume:
